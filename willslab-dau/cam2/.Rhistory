print("Analysis of CAM 2 data set")
print("28-Aug-2014, Andy Wills.")
print("Original analysis c. 2000, using Acorn BBC BASIC and Mac Statview.")
print("Analyses replicated in R when preparing DAU.")
print("----")
dta <- read.table("cam2data.txt", header = TRUE, sep = "\t")
# Extract test phase
tst <- dta[dta$phase == 2,]
View(tst)
View(tst)
dta <- read.table("cam2data.txt", header = TRUE, sep = "\t")
# Name conditions for readability
dta$cond[dta$cond == 1] <- "2500 ms"
View(dta)
dta$cond[dta$cond == 2] <- "1000 ms"
# Extract test phase
tst <- dta[dta$phase == 2,]
ms25 <- tst[tst$cond == "2500 ms"]
ms25 <- tst[tst$cond == "2500 ms",]
View(ms25)
dta <- read.table("cam2data.txt", header = TRUE, sep = "\t")
# Name conditions for readability
dta$cond[dta$cond == 1] <- "2500 ms"
dta$cond[dta$cond == 2] <- "1000 ms"
# Create a column identifying time outs
dta$to <- 0
dta$to[dta$rt == -255] <- 1
View(dta)
tst <- dta[dta$phase == 2,]
rm(ms25)
tof <- aggregate(tst$to,list(tst$cond),mean)
View(tof)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
View(tof)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),sum)
View(tof)
colnames(tof) <- c('subj','cond','N_timeouts')
View(tof)
t.test(to ~ cond, data = tof)
View(tof)
t.test(N_timeouts ~ cond, data = tof)
?t.test
t.test(N_timeouts ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean*100)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
tof$pto <- tof$pto * 100
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
View(tof)
tofc <- aggregate(tst$to,list(tst$subj,tst$cond),sum)
View(tofc)
tof$pto <- round(tof$pto * 100,1)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
tof$pto <- round(tof$pto * 100,1)
View(tof)
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
tof$pto <- round(tof$pto * 100,0)
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
tof$pto <- round(tof$pto * 10,0)
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
tof$pto <- round(tof$pto,2)
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tst <- tst[tst$catordist != 6,]
View(tst)
tst$diff[tst$catordist == 0] <- 1
View(tst)
tst <- dta[dta$phase == 2,]
tst$pc <- 0
tst$pc[tst$resp == 1 & tst$catordist > 6] <- 1 #Correct to respond A where Aelem > Belem
View(tst)
tst$pc[tst$resp == 2 & tst$catordist < 6] <- 1 #Correct to respond B where Aelem < Belem
View(tst)
tst$diff <- 0
tst$diff[tst$catordist == 0] <- 1
tst$diff[tst$catordist == 1] <- 2
tst$diff[tst$catordist == 2] <- 3
tst$diff[tst$catordist == 3] <- 4
tst$diff[tst$catordist == 4] <- 5
tst$diff[tst$catordist == 5] <- 6
tst$diff[tst$catordist == 6] <- 7
tst$diff[tst$catordist == 7] <- 6
tst$diff[tst$catordist == 8] <- 5
tst$diff[tst$catordist == 9] <- 4
tst$diff[tst$catordist == 10] <- 3
tst$diff[tst$catordist == 11] <- 2
tst$diff[tst$catordist == 12] <- 1
View(tst)
tst <- tst[tst$diff !=7,]
tst <- dta[dta$phase == 2,]
# Recode resp as P(correct)
tst$pc <- 0
tst$pc[tst$resp == 1 & tst$catordist > 6] <- 1 #Correct to respond A where Aelem > Belem
tst$pc[tst$resp == 2 & tst$catordist < 6] <- 1 #Correct to respond B where Aelem < Belem
# Recode 'catordist' as difficulty
tst$diff <- 0
tst$diff[tst$catordist == 0] <- 1
tst$diff[tst$catordist == 1] <- 2
tst$diff[tst$catordist == 2] <- 3
tst$diff[tst$catordist == 3] <- 4
tst$diff[tst$catordist == 4] <- 5
tst$diff[tst$catordist == 5] <- 6
tst$diff[tst$catordist == 6] <- 7
tst$diff[tst$catordist == 7] <- 6
tst$diff[tst$catordist == 8] <- 5
tst$diff[tst$catordist == 9] <- 4
tst$diff[tst$catordist == 10] <- 3
tst$diff[tst$catordist == 11] <- 2
tst$diff[tst$catordist == 12] <- 1
# Remove difficulty level 7
tst <- tst[tst$diff !=7,]
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
tol <- aggregate(tst$to,list(tst$diff,tst$subj,tst$cond),mean)
View(tol)
tol <- aggregate(tst$to,list(tst$diff,tst$subj,tst$cond),sum)
View(tol)
try <- tst[tst$subj == 101 & tst$diff == 1,]
View(try)
tst$rt[tst$rt = -255] <- 1e6
tst$rt[tst$rt == -255] <- 1e6
View(tst)
dta <- read.table("cam2data.txt", header = TRUE, sep = "\t")
# Name conditions for readability
dta$cond[dta$cond == 1] <- "2500 ms"
dta$cond[dta$cond == 2] <- "1000 ms"
# Create a column identifying time outs
dta$to <- 0
dta$to[dta$rt == -255] <- 1
# Extract test phase
tst <- dta[dta$phase == 2,]
# Recode resp as P(correct)
tst$pc <- 0
tst$pc[tst$resp == 1 & tst$catordist > 6] <- 1 #Correct to respond A where Aelem > Belem
tst$pc[tst$resp == 2 & tst$catordist < 6] <- 1 #Correct to respond B where Aelem < Belem
# Recode 'catordist' as difficulty
tst$diff <- 0
tst$diff[tst$catordist == 0] <- 1
tst$diff[tst$catordist == 1] <- 2
tst$diff[tst$catordist == 2] <- 3
tst$diff[tst$catordist == 3] <- 4
tst$diff[tst$catordist == 4] <- 5
tst$diff[tst$catordist == 5] <- 6
tst$diff[tst$catordist == 6] <- 7
tst$diff[tst$catordist == 7] <- 6
tst$diff[tst$catordist == 8] <- 5
tst$diff[tst$catordist == 9] <- 4
tst$diff[tst$catordist == 10] <- 3
tst$diff[tst$catordist == 11] <- 2
tst$diff[tst$catordist == 12] <- 1
# Remove difficulty level 7
tst <- tst[tst$diff !=7,]
# Examine time-out percentage
tof <- aggregate(tst$to,list(tst$subj,tst$cond),mean)
colnames(tof) <- c('subj','cond','pto')
t.test(pto ~ cond, data = tof,paired=FALSE,var.equal=TRUE)
# Remove 4 slowest responses at each difficulty level for each su
tst$rt[tst$rt == -255] <- 1000
View(tst)
try <- tst[tst$subj == 101 & tst$diff == 1,]
try
order(try$rt)
tmp <- order(try$rt)
tmp[16:20]
tryout <- try[tmp[1:16],]
View(tryout)
trimt <- NULL
for(s in 101:132) {
for(d in 1:7) {
fast <- tst[tst$subj == s & tst$diff == d,]
tmp <- order(fast$rt)
fastout <- fast[tmp[1:16],]
trimt <- rbind(trimt,fastout)
}
}
3840*16/20
trimt <- NULL
for(s in 101:132) {
for(d in 1:6) {
fast <- tst[tst$subj == s & tst$diff == d,]
tmp <- order(fast$rt)
fastout <- fast[tmp[1:16],]
trimt <- rbind(trimt,fastout)
}
}
View(trimt)
max(trimt$resp)
trimt <- trimt[trimt$resp != 255]
trimt <- trimt[trimt$resp != 255,]
accag <- aggregate(trimt$acc,list(trimt$diff,trimt$subj,trimt$cond),mean)
View(trimt)
accag <- aggregate(trimt$pc,list(trimt$diff,trimt$subj,trimt$cond),mean)
View(accag)
colnames(accag) <- c('diff','subj','cond','acc')
View(accag)
accsum <- aggregate(accag$acc,list(accag$diff,accag$cond),mean)
View(accsum)
colnames(accsum) <- c('diff','cond','acc')
View(accsum)
View(accsum)
library(ez)
install.packages("ez")
library(ez)
View(accsum)
?ezANOVA
accout <- ezANOVA( data = accdum
, dv = acc
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
accout <- ezANOVA( data = accsum
, dv = acc
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
View(accag)
accout <- ezANOVA( data = accag
, dv = acc
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
accout
accag$diff <- as.character(accag$diff)
accout <- ezANOVA( data = accag
, dv = acc
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
accout
spss <- reshape(accag,direction="wide",timevar="diff",idvar="subj")
View(spss)
spss <- reshape(accag,direction="wide",timevar="diff",idvar=c("subj","cond"))
View(spss)
?reshape
spss <- reshape(accag,direction="wide",timevar="diff",idvar="subj"))
spss <- reshape(accag,direction="wide",timevar="diff",idvar="subj")
spss <- reshape(accag,direction="wide",timevar="diff",idvar="subj",varying="cond")
spss <- reshape(accag,direction="wide",timevar="diff",idvar="subj",drop="cond")
View(spss)
accout
accout
rtag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),mean)
View(rtag)
colnames(rtag) <- c('diff','subj','cond','acc')
View(rtag)
rtsum <- aggregate(rtag$acc,list(rtag$diff,rtag$cond),mean)
colnames(rtsum) <- c('diff','cond','acc')
View(rtsum)
rtag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),mean)
colnames(rtag) <- c('diff','subj','cond','rt')
# Now aggregate across participants
rtsum <- aggregate(rtag$rt,list(rtag$diff,rtag$cond),mean)
colnames(rtsum) <- c('diff','cond','rt')
View(rtsum)
# Mean RT ANOVA
rtag$diff <- as.character(rtag$diff)
rtout <- ezANOVA( data = rtag
, dv = rt
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
accout
rtout
?aggregate
?stdev
?sd
sdag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),sd)
View(sdag)
colnames(sdag) <- c('diff','subj','cond','stdev')
sdsum <- aggregate(sdag$stdev,list(sdag$diff,sdag$cond),mean)
colnames(sdsum) <- c('diff','cond','stdev')
View(sdsum)
sdag$diff <- as.character(sdag$diff)
sdout <- ezANOVA( data = sdag
, dv = stdev
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
sdout
?skew
??skew
?skewness
library(e1071)
?aggregate
skewag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),skewness, type = 1 )
View(skewag)
colnames(skewag) <- c('diff','subj','cond','skew')
skewsum <- aggregate(skewag$skew,list(skewag$diff,skewag$cond),mean)
colnames(skewsum) <- c('diff','cond','Skew')
View(skewsum)
skewsum <- aggregate(skewag$skew,list(skewag$cond),mean)
colnames(skewsum) <- c('diff','skew')
View(skewsum)
skewag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),skewness, type = 2 )
colnames(skewag) <- c('diff','subj','cond','skew')
# Now aggregate across participants
skewsum <- aggregate(skewag$skew,list(skewag$cond),mean)
colnames(skewsum) <- c('diff','skew')
View(skewsum)
skewag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),skewness, type = 3 )
colnames(skewag) <- c('diff','subj','cond','skew')
# Now aggregate across participants
skewsum <- aggregate(skewag$skew,list(skewag$cond),mean)
colnames(skewsum) <- c('diff','skew')
View(skewsum)
skewag <- aggregate(trimt$rt,list(trimt$diff,trimt$subj,trimt$cond),skewness, type = 1 )
colnames(skewag) <- c('diff','subj','cond','skew')
# Now aggregate across participants
skewsum <- aggregate(skewag$skew,list(skewag$cond),mean)
colnames(skewsum) <- c('diff','skew')
skewag$diff <- as.character(skewag$diff)
skewout <- ezANOVA( data = skewag
, dv = skew
, wid = subj
, within = c('diff')
, between = cond
, type = 3)
skewout
skew25 <- skewag$skew[skewag$cond == "2500 ms"]
skewagt <- aggregate(trimt$rt,list(trimt$subj,trimt$cond),skewness, type = 1 )
View(skewagt)
skew25 <- skewagt$skew[skewagt$cond == "2500 ms"]
View(skewagt)
colnames(skewagt) <- c('subj','cond','skew')
View(skewagt)
skew25 <- skewagt$skew[skewagt$cond == "2500 ms"]
t.test(skew25,mu=0)
skewagt
skew25
View(skewag)
View(skewagt)
skewagt <- aggregate(skewag$skew,list(skewag$subj,skewag$cond),mean)
colnames(skewagt) <- c('subj','cond','skew')
View(skewagt)
skew25 <- skewagt$skew[skewagt$cond == "2500 ms"]
t.test(skew25,mu=0)
skewout
skewsum
skew10 <- skewagt$skew[skewagt$cond == "1000 ms"]
t.test(skew10,mu=0)
