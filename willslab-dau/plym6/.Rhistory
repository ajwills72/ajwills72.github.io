print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-06-09")
source("plym6cap.R")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
View(bigdta)
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
View(code)
ppts <- 75
blktype <- 8
print("PRIMARY ANALYSIS - Nonlearners excluded")
cap(crittype = 2)
plym6cap(crittype = 2)
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-06-09")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-06-09")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0)
cb <- array(0,c(16,16))
cb <- array[0,c[10,16]]
cb <- array[0,c[10,16]]
cb <- array(0,c(10,16))
cb[1,1]="1111"
cb[2,1]="1110"
cb[3,1]="1101"
cb[4,1]="1011"
cb[5,1]="0000"
cb[6,1]="0001"
cb[7,1]="0010"
cb[8,1]="0100"
cb[9,1]="0111"
cb[10,1]="1000"
cb[1,2]="1110"
cb[2,2]="1111"
cb[3,2]="1100"
cb[4,2]="1010"
cb[5,2]="0001"
cb[6,2]="0000"
cb[7,2]="0011"
cb[8,2]="0101"
cb[9,2]="0110"
cb[10,2]="1001"
cb[1,3]="1101"
cb[2,3]="1111"
cb[3,3]="1001"
cb[4,3]="0101"
cb[5,3]="0010"
cb[6,3]="0000"
cb[7,3]="0110"
cb[8,3]="1010"
cb[9,3]="1100"
cb[10,3]="0011"
cb[1,4]="1011"
cb[2,4]="1001"
cb[3,4]="1111"
cb[4,4]="0011"
cb[5,4]="0100"
cb[6,4]="0110"
cb[7,4]="0000"
cb[8,4]="1100"
cb[9,4]="1010"
cb[10,4]="0101"
cb[1,5]="1100"
cb[2,5]="1000"
cb[3,5]="0100"
cb[4,5]="1101"
cb[5,5]="0011"
cb[6,5]="0111"
cb[7,5]="1011"
cb[8,5]="0010"
cb[9,5]="1110"
cb[10,5]="0001"
cb[1,6]="1000"
cb[2,6]="1100"
cb[3,6]="0000"
cb[4,6]="1001"
cb[5,6]="0111"
cb[6,6]="0011"
cb[7,6]="1111"
cb[8,6]="0110"
cb[9,6]="1010"
cb[10,6]="0101"
cb[1,7]="1010"
cb[2,7]="0010"
cb[3,7]="1011"
cb[4,7]="1000"
cb[5,7]="0101"
cb[6,7]="1101"
cb[7,7]="0100"
cb[8,7]="0111"
cb[9,7]="1110"
cb[10,7]="0001"
cb[1,8]="1001"
cb[2,8]="0001"
cb[3,8]="1000"
cb[4,8]="1011"
cb[5,8]="0110"
cb[6,8]="1110"
cb[7,8]="0111"
cb[8,8]="0100"
cb[9,8]="1101"
cb[10,8]="0010"
cb[1,9]="0111"
cb[2,9]="0110"
cb[3,9]="0101"
cb[4,9]="0011"
cb[5,9]="1000"
cb[6,9]="1001"
cb[7,9]="1010"
cb[8,9]="1100"
cb[9,9]="1111"
cb[10,9]="0000"
cb[1,10]="0110"
cb[2,10]="0111"
cb[3,10]="0100"
cb[4,10]="0010"
cb[5,10]="1001"
cb[6,10]="1000"
cb[7,10]="1011"
cb[8,10]="1101"
cb[9,10]="1110"
cb[10,10]="0001"
cb[1,11]="0101"
cb[2,11]="0111"
cb[3,11]="0001"
cb[4,11]="1101"
cb[5,11]="1010"
cb[6,11]="1000"
cb[7,11]="1110"
cb[8,11]="0010"
cb[9,11]="0100"
cb[10,11]="1011"
cb[1,12]="0011"
cb[2,12]="0001"
cb[3,12]="0111"
cb[4,12]="1011"
cb[5,12]="1100"
cb[6,12]="1110"
cb[7,12]="1000"
cb[8,12]="0100"
cb[9,12]="0010"
cb[10,12]="1101"
cb[1,13]="0100"
cb[2,13]="0000"
cb[3,13]="1100"
cb[4,13]="0101"
cb[5,13]="1011"
cb[6,13]="1111"
cb[7,13]="0011"
cb[8,13]="1010"
cb[9,13]="0110"
cb[10,13]="1001"
cb[1,14]="0000"
cb[2,14]="0100"
cb[3,14]="1000"
cb[4,14]="0001"
cb[5,14]="1111"
cb[6,14]="1011"
cb[7,14]="0111"
cb[8,14]="1110"
cb[9,14]="0010"
cb[10,14]="1101"
cb[1,15]="0010"
cb[2,15]="1010"
cb[3,15]="0011"
cb[4,15]="0000"
cb[5,15]="1101"
cb[6,15]="0101"
cb[7,15]="1100"
cb[8,15]="1111"
cb[9,15]="0110"
cb[10,15]="1001"
cb[1,16]="0001"
cb[2,16]="1001"
cb[3,16]="0000"
cb[4,16]="0011"
cb[5,16]="1110"
cb[6,16]="0110"
cb[7,16]="1111"
cb[8,16]="1100"
cb[9,16]="0101"
cb[10,16]="1010"
View(cb)
cb <- cbind(1:10,cb)
View(cb)
View(cb)
"cb9:D1","cb10:D14","cb11:R1D13","cb12:R1D12","cb13:R2D134","cb14:R2D1234","c15:R4D124","c16:R3D123")
colnames(cb) <- c("stim.number","cb1","cb2:D4","cb3:R1D3","cb4:R1D2","cb5:R2D34","cb6:R2D234","cb7:R3d24","cb8:R3D23",
"cb9:D1","cb10:D14","cb11:R1D13","cb12:R1D12","cb13:R2D134","cb14:R2D1234","c15:R4D124","c16:R3D123")
View(cb)
write.table(cb,file="plym6cb.txt",sep = "\t", row.names = FALSE)
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
View(bigdta)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-12-02")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-06-09")
source("plym6cap copy.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
rm(list=ls())
source("plym6cap copy.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
rm(list=ls())
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
crittype <- 2
pass <- subset(bigdta, phase == 2 & stim < 9 & blk < blktype+1)
trls <- 8 * blktype # Number of trials making up the criterion-passing test
pass.sc <- (2/3) * (blktype * 10) # Note, * 10 rather than * 8, due to double-weighting of prototype.
# Work out training item score
o <- 0
corr <- array(0, dim=c(ppts,5))
colnames(corr) <- c('subj','cond','cb','keyb','correct')
for (j in 1:ppts) {
for (i in 1:trls) {
if ( pass[i+o,'stim'] == 1 | pass[i+o,'stim'] == 5 ) inc <- 2 else inc <- 1
if ( pass[i+o,'stim'] < 5 & pass[i+o,'resp'] == 1 ) corr[j,5] = corr[j,5] + inc
if ( pass[i+o,'stim'] > 4 & pass[i+o,'resp'] == 0 ) corr[j,5] = corr[j,5] + inc
}
corr[j,1] <- pass[o+1,'subj']
corr[j,2] <- pass[o+1,'cond']
corr[j,3] <- pass[o+1,'cb']
corr[j,4] <- pass[o+1,'keyb']
o <- o + trls
}
corr <- as.data.frame(corr)
View(corr)
# If appropriate, select only passing participants
if (crittype == 2) {passes <- subset(corr, correct >= pass.sc)} else {passes <- corr}
passdta <- NULL
for (i in passes$subj) {
passdta <- rbind(passdta, subset(bigdta, subj == i & phase == 2))
}
# Now examine scores on the critical stimuli
# Extract test phase critical stimuli
critstim <- subset(passdta, stim > 8 & stim < 11)
ppts <- length(passes$subj)
View(critstim)
trls <- 26
#Run loop to count how many times participants made judgements of FR or CA on critical items
o <- 0
count <- array(0, dim=c(ppts,6))
colnames(count) <- c('ppt','cond','cb','keyb','famres','critatt')
for (j in 1:ppts) {
for (i in 1:trls) {
if (critstim[i + o, 'stim'] == 9 & critstim[i + o, 'resp'] == 1) count[j,5] = count[j,5] + 1
if (critstim[i + o, 'stim'] == 9 & critstim[i + o, 'resp'] == 0) count[j,6] = count[j,6] + 1
if (critstim[i + o, 'stim'] == 10 & critstim[i + o, 'resp'] == 1) count[j,6] = count[j,6] + 1
if (critstim[i + o, 'stim'] == 10 & critstim[i + o, 'resp'] == 0) count[j,5] = count[j,5] + 1
}
count[j,1] <- critstim[o+1,'subj']
count[j,2] <- critstim[o+1,'cond']
count[j,3] <- critstim[o+1,'cb']
count[j,4] <- critstim[o+1,'keyb']
o <- o + trls
}
count <- as.data.frame(count)
View(count)
count$famres <- count$famres / trls
count$critatt <- count$critatt / trls
print("Total participants per condition")
print(paste("Intentional: ",length(corr$subj[corr$cond == 1])))
print(paste("Incidental: ",length(corr$subj[corr$cond == 2])))
print("Participants passing criterion, per condition")
print(paste("Intentional: ",length(passes$subj[passes$cond == 1])))
print(paste("Incidental: ",length(passes$subj[passes$cond == 2])))
print("Traditional analysis")
print("OS by condition t-test")
print(t.test(famres~cond, data = count,var.equal=TRUE))
print("Response-set analysis")
rm(list=ls())
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-12-02")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-12-02")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0)
print("PRIMARY ANALYSIS - Nonlearners excluded")
plym6cap(crittype = 2)
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-12-03")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0,msave=TRUE)
rm(list=ls())
print("DAU: PLYM6")
print("Author: Andy Wills")
print("Credits: Developed from script by Angus Inkster")
print("Date: 2014-12-03")
source("plym6cap.R")
bigdta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE)
ppts <- 75
blktype <- 3
print("ANALYSIS 2 - All participants")
plym6cap(crittype = 0,msave=TRUE)
load('plym6models.RData')
View(bigmf)
rm(list=ls())
# Define custom function
featcon <- function(dataset) {
require(logistf)
firth.model <- logistf(resp ~ ca + nca1 + nca2 + nca3 + ca,data=dataset)
resul <- c(firth.model$coeff,firth.model$prob)
names(resul) <- c('intercept.coef','ca.coef','nca1.coef','nca2.coef','nca3.coef','intercept.p','ca.p','nca1.p','nca2.p','nca3.p')
return(resul)
}
# Load data file and decode file
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE,row.names=NULL)
dta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
# Add stimulus dimensions to data file.
decode <- code[dta$stim,4:7]
rm(list=ls())
print("PLYM6 - Logistic regression")
print("Author: Andy Wills")
print("Date: 2014-12-05")
print("NB: Use of this method is not technically appropriate")
print("as the stimulus dimensions are correlated. It's been")
print("included here for the curious.")
# Define custom function
featcon <- function(dataset) {
require(logistf)
firth.model <- logistf(resp ~ ca + nca1 + nca2 + nca3 + ca,data=dataset)
resul <- c(firth.model$coeff,firth.model$prob)
names(resul) <- c('intercept.coef','ca.coef','nca1.coef','nca2.coef','nca3.coef','intercept.p','ca.p','nca1.p','nca2.p','nca3.p')
return(resul)
}
code <- read.table("plym6code.txt", header = TRUE, sep = "\t",stringsAsFactors = FALSE,row.names=NULL)
dta <- read.table("plym6data.txt", header = TRUE, sep = "\t")
# Add stimulus dimensions to data file.
decode <- code[dta$stim,4:7]
dta <- cbind(dta,decode)
tstdta <- dta[dta$phase==2,]
rm(dta,decode,code)
# Name conditions for readability
tstdta$cond[tstdta$cond == 1] <- 'intentional'
tstdta$cond[tstdta$cond == 2] <- 'incidental'
# Run through subjects
subjs <- as.numeric(levels(as.factor(tstdta$subj)))
results <- array(0,dim=c(length(subjs),18))
results <- data.frame(results)
colnames(results) <- c('subj','cond','ndim','intercept.coef','ca.coef','nca1.coef','nca2.coef','nca3.coef',
'intercept.p','ca.p','nca1.p','nca2.p','nca3.p','coef4','coef3','coef2','coef1','strongca')
i <- 0
for(subindex in subjs) {
i <- i + 1
onesub <- tstdta[tstdta$subj == subindex,]
results[i,1] <- subindex
results[i,4:13] <- featcon(onesub)
results[i,3] <- sum(results[i,10:13] < .05) # This counts number of features where p < .05
tmp <- results[i,5:8]
results[i,14:17] <- tmp[order(abs(tmp))]
if (results[i,5] == results[i,17]) results[i,18] <- 1 # Is strongest dimension criterial?
results[i,2] <- onesub$cond[1]
}
View(results)
# Remove those with no dimensions controlling behavior
results <- results[results$ndim != 0,]
print('Dimensions DV descriptives')
tbl <- table(results$ndim,results$cond)
props <- tbl
props[,1] <- props[,1]/sum(props[,1])
props[,2] <- props[,2]/sum(props[,2])
print(props)
print('Criterial DV descriptives')
crit <- table(results$strongca,results$cond)
rownames(crit) <- c('NCA','CA')
critprops <- crit
critprops[,1] <- critprops[,1]/sum(critprops[,1])
critprops[,2] <- critprops[,2]/sum(critprops[,2])
print(critprops)
print('Criterial DV chi-square test')
print(chisq.test(crit,correct=FALSE))
print('Dimensions DV chi-square test')
print(chisq.test(tbl,simulate.p.value=TRUE, B = 200000))
print('Dimensions DV Bayesian contingency table')
library(conting)
#Reshape data
y <- c(tbl[,1],tbl[,2])
cond <- c(rep('incidental',4),rep('intentional',4))
ndim <- c(rep(c(1,2,3,4),2))
mb <- data.frame(cond,ndim,y)
print("MC methods, 10k iterations (not stable with fewer)")
test <- bcct(formula=y~(ndim+cond)^2,data=mb,n.sample=10000,prior="UIP")
summary(test)
.75/.24
