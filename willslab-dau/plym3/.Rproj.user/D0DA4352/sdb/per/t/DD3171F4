{
    "contents" : "print(\"DAU: PLYM3\")\nprint(\"Author: Andy Wills\")\nprint(\"Date: 2014-11-21\")\nlibrary(psych)\nlibrary(conting)\ncde <- read.table(\"plym3code.txt\", header = TRUE, sep = \"\\t\")\nbigdta <- read.table(\"plym3data.txt\", header = TRUE, sep = \"\\t\")\ndta <- subset(bigdta, phase == 1)\nppts <- 79\ntrls <- 96\nprint(\"Preparing response set analysis...\")\nbigm <- array(0, dim=c(ppts,12))\ncolnames(bigm) <- c(\"cond\",\"subj\",\"dot\",\"leng\",\"os\",\"ident\",\"left1\",\"mid2\",\"right3\",\"nbr\",\"model\",\"consist\")\no <- 0\nfor (j in 1:ppts) {\n\tmdl <-c(0,0,0,0,0,0,0,0)\n\ttio <-0\n\tfor (i in 1:trls) { \n\t\tif (cde[dta[i+o,'stim'],'dot'] == dta[i+o,'resp']) mdl[1] = mdl[1] + 1\n\t\tif (cde[dta[i+o,'stim'],'leng'] == dta[i+o,'resp']) mdl[2] = mdl[2] + 1\n\t\tif (cde[dta[i+o,'stim'],'os'] == dta[i+o,'resp']) mdl[3] = mdl[3] + 1\n\t\tif (cde[dta[i+o,'stim'],'ident'] == dta[i+o,'resp']) mdl[4] = mdl[4] + 1\t\n\t\tif (1 == dta[i+o,'resp']) mdl[5] = mdl[5] + 1\n\t\tif (2 == dta[i+o,'resp']) mdl[6] = mdl[6] + 1\n\t\tif (3 == dta[i+o,'resp']) mdl[7] = mdl[7] + 1\n\t\tif (cde[dta[i+o,'stim'],'nbr'] == dta[i+o,'resp']) mdl[8] = mdl[8] + 1\t\n\t\tif (0 == dta[i+o,'resp']) tio = tio + 1\n\t}\n\tmdl = mdl / (trls-tio)\n\tbigm[j,'cond'] = dta[o+1,'cond']\n\tbigm[j,'subj'] = dta[o+1,'subj']\n\tbigm[j,3:10] = mdl\n\tbigm[j,'model'] = which.max(mdl)\n\tbigm[j,'consist'] = max(mdl)\n\to = o + trls \n}\nprint(\"Traditional analysis\")\nbigmf <- as.data.frame(bigm)\n\nprint(\"Effect of condition on BC\")\ntdta <- subset(bigmf, cond == 1 | cond == 2, select=c('cond','os','ident'))\nprint(t.test(os ~ cond, data = tdta,var.equal=TRUE))\n\nprint(\"Effect of condition on AB (paper reports means but not t-test\")\nprint(t.test(ident ~ cond, data = tdta,var.equal=TRUE))\n\nprint(\"Response-set descriptives - proportions\")\nmbt <- table(bigm[,'cond'],bigm[,'model'])\nud <- mbt[,1] + mbt[,2]\nos <- mbt[,3]\nid <- mbt[,4]\nmbts <- cbind(ud,os,id)\nmbts[1,] <- mbts[1,]/sum(mbts[1,])\nmbts[2,] <- mbts[2,]/sum(mbts[2,])\nprint(mbts)\n\nprint(\"Response-set analysis\")\nmbts <- cbind(ud,os,id)\nprint(\"OS vs other\")\nc <- rbind(c(mbts[1,'os'],mbts[1,'ud']+mbts[1,'id']),c(mbts[2,'os'],mbts[2,'ud']+mbts[2,'id']))\nprint(chisq.test(c,correct=FALSE)) # Monte Carlo used due to low expected values.\n\nprint(\"UD vs other\")\nc <- rbind(c(mbts[1,'ud'],mbts[1,'os']+mbts[1,'id']),c(mbts[2,'ud'],mbts[2,'os']+mbts[2,'id']))\nprint(chisq.test(c,correct=FALSE)) # Yates correction not used as assumptions of correction not met.\n\nprint(\"Combine PLYM2 with PLYM3\")\nmbtsply1 <- rbind(c(16,36,2),c(20,21,9))\nmbts <- mbts+ mbtsply1\nprint(\"UD vs other\")\nc <- rbind(c(mbts[1,'ud'],mbts[1,'os']+mbts[1,'id']),c(mbts[2,'ud'],mbts[2,'os']+mbts[2,'id']))\nchisq.test(c,correct=FALSE)\nprint(\"UD vs Other: Bayesian\")\nrow.names(c) <- c('2s','5s')\ncolnames(c) <- c('UD','Other')\n# One could re-shape this automatically, but here\n# it's done by hand\ny <- c(19,67,27,55)\nstrat <- c('UD','Other','UD','Other')\ncond <- c('2s','2s','5s','5s')\nmb <- data.frame(y,strat,cond)\nprint(mb)\nprint(\"MC methods, 10k iterations (not stable with fewer)\")\ntest2 <- bcct(formula=y~(strat+cond)^2,data=mb,n.sample=10000,prior=\"UIP\")\nsummary(test2)\nprint(\"Bayes Factor\")\nprint(.23/.77) # Done manually for simplicity (could read test2 structure directly)\n\n####\nprint(\"Save out model summary table, including impulsivity scores\")\nbdt <- subset(bigdta, phase == 2 & cond == 1)\nbigmfu <- subset(bigmf, cond == 1)\nkey <- read.table(\"barrattkey.txt\", header = TRUE, sep = \"\\t\")\nsc <- array(0,dim=c(nrow(bigmfu),6))\ncolnames(sc) <- c(\"exp\",\"att\",\"mot\",\"non\",\"bis\",\"subj\")\nfor (cp in 1:nrow(bigmfu)) {\n  sc[cp,'subj'] <- bdt[i+(cp-1)*30,'subj']\n  for (i in 1:30) {\n    for (j in 1:3) {\n      if ( key[i,(j+1)] == 1 ) { \n        sc[cp,(j+1)] <- sc[cp,(j+1)] + bdt[i+(cp-1)*30,'resp']  \n      }\n      if ( key[i,(j+1)] == -1 ) { \n        sc[cp,(j+1)] <- sc[cp,(j+1)] + 5 - bdt[i+(cp-1)*30,'resp']  \n      }\n    }\n  }\n  sc[cp,'bis'] <- sum(sc[cp,2:4])\n}\nbigmfu <- cbind(bigmfu,sc)\nbigmfu$exp <- 'PLYM3'\nsave(bigmfu,file='plym3sum.RData')\n\nprint(\"SUPPLEMENTARY ANALYSES (RESPONSE SET)\")\n# Removing the position bias people...\nbigm <- bigm[bigm[,'model'] < 5,]\nbigmf <- as.data.frame(bigm)\n# ...and combining the two UD strategies\nbigmf$model[bigmf$model == 1] <- 'ud'\nbigmf$model[bigmf$model == 2] <- 'ud'\nbigmf$model[bigmf$model == 3] <- 'os'\nbigmf$model[bigmf$model == 4] <- 'id'\n# Create a ud column, selecting the better of the two UD fits\nbigmf$ud <- pmax(bigmf$dot,bigmf$leng)\n\n# Closest competitor analysis\nbigmf$win.margin <- 0\nfor (i in 1:nrow(bigmf)) {\n  tmp <- c(bigmf[i,'ud'],bigmf[i,'os'],bigmf[i,'ident'])\n  tmp <- tmp[order(tmp)]\n  bigmf$win.margin[i] <- tmp[3] - tmp[2]\n}\n\n#Relabel conditions for ease\nbigmf$cond[bigmf$cond==1] <- '<2000 ms'\nbigmf$cond[bigmf$cond==2] <- '>5000 ms'\n\nprint('Table S3')\n\nprint('N (all cells)')\nprint(aggregate(consist ~ model + cond,data=bigmf,length))\n\nprint('Consistency (all cells)')\nprint(aggregate(consist ~ model + cond,data=bigmf,mean))\n\nprint('Margin (all cells)')\nprint(aggregate(win.margin ~ model + cond,data=bigmf,mean))\n\nprint('Consistency (collapse condition)')\nprint(aggregate(consist ~ model,data=bigmf,mean))\n\nprint('Margin (collapse condition)')\nprint(aggregate(win.margin ~ model,data=bigmf,mean))\n\nprint('Consistency (collapse models)')\nprint(aggregate(consist ~ cond,data=bigmf,mean))\n\nprint('Margin (collapse models)')\nprint(aggregate(win.margin ~ cond,data=bigmf,mean))\n\nprint('Remove ID (sample too small)')\nbigmfnoid <- bigmf[bigmf$model != 'id',]\n\nprint('Response model type effect on consistency')\nprint(t.test(consist ~ model, data = bigmfnoid,var.equal=TRUE))\n\nprint('Response model type effect on margin')\nprint(t.test(win.margin ~ model, data = bigmfnoid,var.equal=TRUE))\n\nprint('Stimulus presentation time effect on consistency')\nprint(t.test(consist ~ cond, data = bigmf,var.equal=TRUE))\n\nprint('Stimulus presentation time effect on margin')\nprint(t.test(win.margin ~ cond, data = bigmf,var.equal=TRUE))\n\nprint('Save out model analysis')\nbigmf[,'exp'] <- 'PLYM3'\nsave(bigmf,file='plym3sum2.RData')\n\n\n\n\n\n\nprint('***END***')\n\n\n\n\n",
    "created" : 1402054747781.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3482063114",
    "id" : "DD3171F4",
    "lastKnownWriteTime" : 1416586818,
    "path" : "~/Dropbox/PROJECTS/PROJECTS/DAUs/plym3 PLY_4 (Ward triads 2)/plym3willslab/plym3analysis.R",
    "project_path" : "plym3analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}